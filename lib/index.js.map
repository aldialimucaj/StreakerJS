{"version":3,"sources":["index.js"],"names":[],"mappings":";AACA,YAAY,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQb,IAAM,UAAU,GAAG,kBAAQ,UAAU,CAAC;;AAGtC,IAAM,KAAK,GAAG,OAAO,CAAC,iBAAiB,CAAC,CAAC;;AAEzC,IAAM,MAAM,GAAG,sBAAY,CAAC;AAC5B,IAAM,KAAK,GAAG,gBAAM,IAAI,CAAC,GAAG,CAAC;AAC7B,IAAM,OAAO,GAAG,gBAAM,IAAI,CAAC,KAAK,CAAC;;AAEjC,oBACK,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC;;;AAAC,AAG5B,oBACK,OAAO,CAAC,QAAQ,CAAC,CACjB,WAAW,CAAC,gBAAgB,CAAC,CAC7B,MAAM,CAAC,YAAM;AACV,cAAU,CAAC,IAAI,CAAC,eAAS,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,UAAU,EAAE;AAC9D,cAAM,CAAC,IAAI,GAAG,UAAU,CAAC;AACzB,cAAM,CAAC,MAAM,EAAE,CAAC;KACnB,CAAC,CAAC;CACN,CAAC;;;AAAC,AAGP,oBACK,OAAO,CAAC,aAAa,CAAC,CACtB,WAAW,CAAC,6BAA6B,CAAC,CAC1C,MAAM,CAAC,UAAC,IAAI,EAAK;AACd,UAAM,CAAC,QAAQ,CAAC,IAAI,CAAC;AAAC,CACzB,CAAC;;;AAAC,AAGP,oBAAQ,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC;;;AAAC,AAG5B,IAAI,CAAC,oBAAQ,IAAI,CAAC,MAAM,EAAE,oBAAQ,IAAI,EAAE,CAAC","file":"index.js","sourcesContent":["\r\n\"use strict\";\r\n\r\nimport program from 'commander';\r\nimport chalk from 'chalk';\r\nimport Promise from 'promise';\r\nimport nodegit from 'nodegit';\r\nimport nodepath from 'path';\r\n\r\nconst Repository = nodegit.Repository;\r\n\r\nimport Gitter from './gitter';\r\nconst pcage = require('../package.json');\r\n\r\nconst gitter = new Gitter();\r\nconst error = chalk.bold.red;\r\nconst success = chalk.bold.green;\r\n\r\nprogram\r\n    .version(pcage.version);\r\n\r\n/* ========================================================================== */\r\nprogram\r\n    .command('commit')\r\n    .description('Commit changes')\r\n    .action(() => {\r\n        Repository.open(nodepath.resolve('.')).then(function (repository) {\r\n            gitter.repo = repository;\r\n            gitter.commit();\r\n        });\r\n    });\r\n\r\n/* ========================================================================== */\r\nprogram\r\n    .command('init [repo]')\r\n    .description('Initialize a git repository')\r\n    .action((repo) => {\r\n        gitter.initRepo(repo); // find out what to do with results\r\n    });\r\n\r\n/* Parse process arguments */\r\nprogram.parse(process.argv);\r\n\r\n/* Print Helo if no arguments. Maybe later show interactive menu. */\r\nif (!program.args.length) program.help();\r\n"],"sourceRoot":"E:\\Dropbox\\te_ndryshme\\Projekte\\Striker\\src"}