{"version":3,"sources":["index.js"],"names":[],"mappings":";AACA,YAAY,CAAC;;;;;;;;;;;;;;;;;;;;AAOb,IAAM,KAAK,GAAG,OAAO,CAAC,iBAAiB,CAAC,CAAC;;AAEzC,IAAM,MAAM,GAAG,sBAAY,CAAC;AAC5B,IAAM,KAAK,GAAG,gBAAM,IAAI,CAAC,GAAG,CAAC;AAC7B,IAAM,OAAO,GAAG,gBAAM,IAAI,CAAC,KAAK,CAAC;;AAEjC,oBACK,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC;;;AAAC,AAG5B,oBACI,OAAO,CAAC,QAAQ,CAAC,CACjB,WAAW,CAAC,gBAAgB,CAAC,CAC7B,MAAM,CAAC,YAAM;AACZ,UAAO,CAAC,GAAG,CAAC,OAAO,CAAC,2BAA2B,CAAC,CAAC,CAAC;CACnD,CAAC;;;AAAC,AAGN,oBACI,OAAO,CAAC,MAAM,CAAC,CACf,WAAW,CAAC,6BAA6B,CAAC,CAC1C,MAAM,CAAC,YAAM;AACV,SAAM,CAAC,QAAQ,EAAE;AAAC,CACrB,CAAC;;;AAAC,AAGN,oBAAQ,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC;;;AAAC,AAG5B,IAAI,CAAC,oBAAQ,IAAI,CAAC,MAAM,EAAE,oBAAQ,IAAI,EAAE,CAAC","file":"index.js","sourcesContent":["\r\n\"use strict\";\r\n\r\nimport program from 'commander';\r\nimport chalk from 'chalk';\r\nimport Promise from 'promise';\r\n\r\nimport Gitter from './gitter';\r\nconst pcage = require('../package.json');\r\n\r\nconst gitter = new Gitter();\r\nconst error = chalk.bold.red;\r\nconst success = chalk.bold.green;\r\n\r\nprogram\r\n    .version(pcage.version);\r\n\r\n/* ========================================================================== */    \r\nprogram\r\n   .command('commit')\r\n   .description('Commit changes')\r\n   .action(() => {\r\n     console.log(success('All changes were commited'));\r\n   });\r\n\r\n/* ========================================================================== */\r\nprogram\r\n   .command('init')\r\n   .description('Initialize a git repository')\r\n   .action(() => {\r\n       gitter.initRepo(); // find out what to do with results\r\n   });\r\n\r\n/* Parse process arguments */\r\nprogram.parse(process.argv);\r\n\r\n/* Print Helo if no arguments. Maybe later show interactive menu. */\r\nif (!program.args.length) program.help();\r\n"],"sourceRoot":"E:\\Dropbox\\te_ndryshme\\Projekte\\Striker\\src"}